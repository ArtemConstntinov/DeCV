FROM node:11.12.0-alpine AS base-dependencies

ENV APP_ROOT /src
ENV SASS_BINARY_SITE=https://npm.taobao.org/mirrors/node-sass/

RUN mkdir ${APP_ROOT}

RUN sed -i 's/dl-cdn.alpinelinux.org/mirror.tuna.tsinghua.edu.cn/g' /etc/apk/repositories && \
	echo "**** install build packages ****" && \
    apk add --no-cache make gcc g++ python curl git libc6-compat && \
    cd /tmp && \
    curl -#L https://github.com/tj/node-prune/releases/download/v1.0.1/node-prune_1.0.1_linux_amd64.tar.gz | tar -xvzf- && \
    mv -v node-prune /usr/local/bin && rm -rvf * && \
    echo "yarn cache clean && node-prune" > /usr/local/bin/node-clean && chmod +x /usr/local/bin/node-clean && \
    npm config set registry https://registry.npm.taobao.org/ && \
    npm install --global cross-env
WORKDIR ${APP_ROOT}


FROM base-dependencies AS development-env
ENV HOST 0.0.0.0
ENV NODE_ENV=development
COPY /src/nuxt/package.json ${APP_ROOT}
COPY /src/nuxt/package-lock.json ${APP_ROOT}
RUN npm install && node-clean


FROM development-env AS build-env
COPY /src/nuxt/ /src
RUN npm run build


FROM base-dependencies AS prep-production-env
COPY --from=development-env /src/package.json /src
COPY --from=development-env /src/package-lock.json /src
RUN npm install --production && \
	node-clean



FROM node:11.12.0-alpine AS production-env
ENV NODE_ENV=production
ENV HOST 0.0.0.0

RUN mkdir /src
WORKDIR /src

ADD /src/nuxt/package.json /src
ADD /src/nuxt/nuxt.config.js /src

COPY --from=build-env /src/server /src/server/
COPY --from=prep-production-env /src/node_modules /src/node_modules/
COPY --from=build-env /src/.nuxt /src/.nuxt/
COPY --from=build-env /src/static /src/static/

EXPOSE 3000

CMD ["node", "server/index.js"]


