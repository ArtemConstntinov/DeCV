
map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

upstream app_ui {
    ip_hash;
    server nuxt:3000;
}

upstream app_tornado {
	server tornado:8888;
}


server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}

server {
    # Requires root access.
    listen 443 ssl;
    server_name localhost;

    ssl_certificate           /ssl_cert/cert.crt;
    ssl_certificate_key       /ssl_cert/cert.key;

    # ssl on;
    ssl_session_cache  builtin:1000  shared:SSL:10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;


    location ^~ /static/ {
        autoindex on;
        try_files $uri $uri/ @backend;
    }

	location @backend {
		proxy_pass http://app_ui;
	}

    location ^~ /media/ {
        autoindex on;
        alias /var/www/media/;
        if ($query_string) {
            expires max;
        }
    }

    location = /favicon.ico {
        rewrite (.*) /static/favicons/favicon.ico;
    }

    location = /favicon.png {
        rewrite (.*) /static/favicons/favicon.png;
    }

    location = /robots.txt {
        rewrite (.*) /static/robots.txt;
    }

	error_page 502 /502.html;
	location = /502.html {
		root  /var/www/public_html; # path where you 502.html is stored
		internal;
	}

    location / {
		if ($request_method ~* "(GET|POST|PUT|DELETE|UPDATE)") {
            add_header "Access-Control-Allow-Origin"  *;
        }

        # Preflighted requests
        if ($request_method = OPTIONS ) {
            add_header "Access-Control-Allow-Origin"  *;
            add_header "Access-Control-Allow-Methods" "GET, POST, PUT, UPDATE, DELETE, OPTIONS, HEAD";
            add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            return 200;
        }

		proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-NginX-Proxy true;
		proxy_set_header Origin $http_origin;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_pass http://app_ui;

        proxy_read_timeout  90;

        proxy_redirect      http://app_ui https://localhost;
    }


	# WebSocket.
    location /ws {

        if ($request_method ~* "(GET|POST)") {
            add_header "Access-Control-Allow-Origin"  *;
        }

        # Preflighted requests
        if ($request_method = OPTIONS ) {
            add_header "Access-Control-Allow-Origin"  *;
            add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
            add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
            return 200;
        }

        proxy_pass http://app_tornado;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header Origin '';
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
    }

	location /api {
		tcp_nodelay       on;
		keepalive_timeout 65;
		sendfile   on;
		tcp_nopush on;
		sendfile_max_chunk 1m;

		proxy_pass_header Server;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Scheme $scheme;
		proxy_pass http://app_tornado;
    }

}
